{"name":"FltRegular.CaseI.Statement","instances":[{"typeNames":["Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","CommSemiring.toSemiring","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toCommRing"],"name":"FltRegular.foo1","className":"IsDomain"},{"typeNames":["Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toCommRing","Int","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Int.instCommRingInt","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","NumberField.ringOfIntegers"],"name":"FltRegular.foo2","className":"IsDedekindDomain"},{"typeNames":["Ideal","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","CommSemiring.toSemiring","Ideal","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","IdemCommSemiring.toCommSemiring","Ideal.instIdemCommSemiringIdealToSemiring","Subalgebra.toCommSemiring","Semifield.toCommSemiring","Field.toSemifield"],"name":"FltRegular.foo3","className":"IsDomain"},{"typeNames":["Ideal","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","IsDomain.toCancelCommMonoidWithZero","Ideal","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","IdemCommSemiring.toCommSemiring","Submodule.instIdemCommSemiringSubmoduleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonAssocSemiringToSemiringToModule","Subalgebra.toCommSemiring","Semifield.toCommSemiring","Field.toSemifield","NumberField.inst_ringOfIntegersAlgebra","Algebra.id","FltRegular.foo3"],"name":"FltRegular.foo4","className":"NormalizedGCDMonoid"},{"typeNames":["Ideal","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","IsDomain.toCancelCommMonoidWithZero","Ideal","Subtype","CyclotomicField","Subtype.mk","Nat","LT.lt","instLTNat","OfNat.ofNat","instOfNatNat","Nat.Prime.pos","Fact.out","Nat.Prime","Rat","Rat.field","Membership.mem","Subalgebra","Int","CommRing.toCommSemiring","Int.instCommRingInt","CommSemiring.toSemiring","EuclideanDomain.toCommRing","Field.toEuclideanDomain","CyclotomicField.instFieldCyclotomicField","algebraInt","DivisionRing.toRing","Field.toDivisionRing","SetLike.instMembership","Subalgebra.instSetLikeSubalgebra","NumberField.ringOfIntegers","Subalgebra.toSemiring","IdemCommSemiring.toCommSemiring","Submodule.instIdemCommSemiringSubmoduleToSemiringToAddCommMonoidToNonUnitalNonAssocSemiringToNonAssocSemiringToSemiringToModule","Subalgebra.toCommSemiring","Semifield.toCommSemiring","Field.toSemifield","NumberField.inst_ringOfIntegersAlgebra","Algebra.id","FltRegular.foo3"],"name":"FltRegular.foo5","className":"GCDMonoid"}],"imports":["Init","FltRegular.CaseI.AuxLemmas"],"declarations":[{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L299-L303","name":"FltRegular.caseI","line":299,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.caseI","doc":"CaseI. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.caseI\"><span class=\"name\">FltRegular</span>.<span class=\"name\">caseI</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hreg : <span class=\"fn\"><a href=\"./FltRegular/NumberTheory/RegularPrimes.html#IsRegularPrime\">IsRegularPrime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caseI : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L269-L296","name":"FltRegular.caseI_easier","line":269,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.caseI_easier","doc":"Case I with additional assumptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.caseI_easier\"><span class=\"name\">FltRegular</span>.<span class=\"name\">caseI_easier</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hreg : <span class=\"fn\"><a href=\"./FltRegular/NumberTheory/RegularPrimes.html#IsRegularPrime\">IsRegularPrime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hgcd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Finset.html#Finset.gcd\">Finset.gcd</a> <span class=\"fn\">{<span class=\"fn\">a</span>, <span class=\"fn\">b</span>, <span class=\"fn\">c</span>}</span> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hab : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\">b</span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caseI : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L263-L266","name":"FltRegular.auxf","line":263,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.auxf","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.auxf\"><span class=\"name\">FltRegular</span>.<span class=\"name\">auxf</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">i</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./FltRegular/CaseI/Statement.html#FltRegular.f\">FltRegular.f</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> <span class=\"fn\">↑<span class=\"fn\">k₁</span></span> <span class=\"fn\">↑<span class=\"fn\">k₂</span></span> <span class=\"fn\">↑<span class=\"fn\">i</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L239-L261","name":"FltRegular.auxf'","line":239,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.auxf'","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.auxf'\"><span class=\"name\">FltRegular</span>.<span class=\"name\">auxf'</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k₁ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k₂ : <span class=\"fn\"><a href=\"./Init/Prelude.html#Fin\">Fin</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">i</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">i</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/Data/Finset/Basic.html#Finset.range\">Finset.range</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\"><a href=\"./FltRegular/CaseI/Statement.html#FltRegular.f\">FltRegular.f</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span> (<span class=\"fn\">↑<span class=\"fn\">k₁</span></span>) (<span class=\"fn\">↑<span class=\"fn\">k₂</span></span>) <span class=\"fn\">i</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">0</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L236-L237","name":"FltRegular.f","line":236,"kind":"def","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.f","doc":"Auxiliary function "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.f\"><span class=\"name\">FltRegular</span>.<span class=\"name\">f</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k₁ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(k₂ : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Init/Prelude.html#Nat\">ℕ</a> → <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L187-L233","name":"FltRegular.ex_fin_div","line":187,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.ex_fin_div","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.ex_fin_div\"><span class=\"name\">FltRegular</span>.<span class=\"name\">ex_fin_div</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hp5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hreg : <span class=\"fn\"><a href=\"./FltRegular/NumberTheory/RegularPrimes.html#IsRegularPrime\">IsRegularPrime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hgcd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Finset.html#Finset.gcd\">Finset.gcd</a> <span class=\"fn\">{<span class=\"fn\">a</span>, <span class=\"fn\">b</span>, <span class=\"fn\">c</span>}</span> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caseI : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">k₁</span> <span class=\"fn\">k₂</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">k₂</span></span></span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">≡</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">↑<span class=\"fn\">k₁</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\">1</span></span> <a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">[ZMOD</a> <span class=\"fn\">↑<span class=\"fn\">p</span></span><a href=\"./Mathlib/Data/Int/ModEq.html#Int.ModEq\">]</a></span> <a href=\"./Init/Prelude.html#And\">∧</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">ζ</span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">k₁</span></span></span></span></span> <a href=\"./Init/Prelude.html#HSub.hSub\">-</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">↑<span class=\"fn\">k₂</span></span></span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L176-L185","name":"FltRegular.is_principal","line":176,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.is_principal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.is_principal\"><span class=\"name\">FltRegular</span>.<span class=\"name\">is_principal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hreg : <span class=\"fn\"><a href=\"./FltRegular/NumberTheory/RegularPrimes.html#IsRegularPrime\">IsRegularPrime</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hp5 : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hgcd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Finset.html#Finset.gcd\">Finset.gcd</a> <span class=\"fn\">{<span class=\"fn\">a</span>, <span class=\"fn\">b</span>, <span class=\"fn\">c</span>}</span> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caseI : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/RootsOfUnity/Basic.html#IsPrimitiveRoot\">IsPrimitiveRoot</a> <span class=\"fn\">ζ</span> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">u</span> <span class=\"fn\">α</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L158-L174","name":"FltRegular.is_principal_aux","line":158,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.is_principal_aux","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.is_principal_aux\"><span class=\"name\">FltRegular</span>.<span class=\"name\">is_principal_aux</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(K' : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Field/Defs.html#Field\">Field</a> <span class=\"fn\">K'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/CharZero/Defs.html#CharZero\">CharZero</a> <span class=\"fn\">K'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#IsCyclotomicExtension\">IsCyclotomicExtension</a> <span class=\"fn\">{<span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span>}</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a> <span class=\"fn\">K'</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup\">ClassGroup</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K'</span></span></span> }</span></span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K'</span></span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hreg : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">p</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup\">ClassGroup</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K'</span></span></span> }</span></span>)</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> <span class=\"fn\">K'</span></span></span> }</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">{<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">u</span> <span class=\"fn\">α</span>, <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">u</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\"><span class=\"fn\">α</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L144-L156","name":"FltRegular.IsPrincipal_of_IsPrincipal_pow_of_Coprime","line":144,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.IsPrincipal_of_IsPrincipal_pow_of_Coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.IsPrincipal_of_IsPrincipal_pow_of_Coprime\"><span class=\"name\">FltRegular</span>.<span class=\"name\">IsPrincipal_of_IsPrincipal_pow_of_Coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(A : <a href=\"./foundational_types.html\">Type</a> u_1)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#CommRing\">CommRing</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/Basic.html#IsDedekindDomain\">IsDedekindDomain</a> <span class=\"fn\">A</span></span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Basic.html#Fintype\">Fintype</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup\">ClassGroup</a> <span class=\"fn\">A</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><a href=\"./Std/Data/Nat/Gcd.html#Nat.Coprime\">Nat.Coprime</a> <span class=\"fn\">p</span> (<span class=\"fn\"><a href=\"./Mathlib/Data/Fintype/Card.html#Fintype.card\">Fintype.card</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/ClassGroup.html#ClassGroup\">ClassGroup</a> <span class=\"fn\">A</span></span>)</span>)</span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(I : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">A</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hI : <span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrincipalIdealDomain.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> (<span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span>)</span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/PrincipalIdealDomain.html#Submodule.IsPrincipal\">Submodule.IsPrincipal</a> <span class=\"fn\">I</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L127-L142","name":"FltRegular.exists_ideal","line":127,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.exists_ideal","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.exists_ideal\"><span class=\"name\">FltRegular</span>.<span class=\"name\">exists_ideal</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(h5p : <span class=\"fn\"><span class=\"fn\">5</span> <a href=\"./Init/Prelude.html#LE.le\">≤</a> <span class=\"fn\">p</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hgcd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Finset.html#Finset.gcd\">Finset.gcd</a> <span class=\"fn\">{<span class=\"fn\">a</span>, <span class=\"fn\">b</span>, <span class=\"fn\">c</span>}</span> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(caseI : <span class=\"fn\"><a href=\"./Init/Prelude.html#Not\">¬</a><span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">p</span></span> <a href=\"./Std/Classes/Dvd.html#Dvd.dvd\">∣</a> <span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">b</span></span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">c</span></span></span></span>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{ζ : <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(hζ : <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a>   <span class=\"fn\"><a href=\"./Mathlib/Data/Polynomial/RingDivision.html#Polynomial.nthRootsFinset\">Polynomial.nthRootsFinset</a> <span class=\"fn\">p</span>\n    <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span></span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\">∃ <span class=\"fn\">I</span>, <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal.span\">Ideal.span</a> <span class=\"fn\">{<span class=\"fn\"><span class=\"fn\">↑<span class=\"fn\">a</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">ζ</span> <a href=\"./Init/Prelude.html#HMul.hMul\">*</a> <span class=\"fn\">↑<span class=\"fn\">b</span></span></span></span>}</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">I</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L120-L123","name":"FltRegular.foo5","line":120,"kind":"instance","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.foo5","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.foo5\"><span class=\"name\">FltRegular</span>.<span class=\"name\">foo5</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#GCDMonoid\">GCDMonoid</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L114-L117","name":"FltRegular.foo4","line":114,"kind":"instance","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.foo4","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">noncomputable instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.foo4\"><span class=\"name\">FltRegular</span>.<span class=\"name\">foo4</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Basic.html#NormalizedGCDMonoid\">NormalizedGCDMonoid</a>\n  (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L110-L111","name":"FltRegular.foo3","line":110,"kind":"instance","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.foo3","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.foo3\"><span class=\"name\">FltRegular</span>.<span class=\"name\">foo3</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> (<span class=\"fn\"><a href=\"./Mathlib/RingTheory/Ideal/Basic.html#Ideal\">Ideal</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span></span>)</span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L107-L108","name":"FltRegular.foo2","line":107,"kind":"instance","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.foo2","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.foo2\"><span class=\"name\">FltRegular</span>.<span class=\"name\">foo2</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/DedekindDomain/Basic.html#IsDedekindDomain\">IsDedekindDomain</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L103-L105","name":"FltRegular.foo1","line":103,"kind":"instance","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.foo1","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">instance</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.foo1\"><span class=\"name\">FltRegular</span>.<span class=\"name\">foo1</span></a></span><span class=\"decl_args\">\n<span class=\"fn\">(p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>)</span></span>\n<span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">[hpri : <span class=\"fn\"><a href=\"./Mathlib/Logic/Basic.html#Fact\">Fact</a> (<span class=\"fn\"><a href=\"./Mathlib/Data/Nat/Prime.html#Nat.Prime\">Nat.Prime</a> <span class=\"fn\">p</span></span>)</span>]</span></span>\n</span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/Ring/Defs.html#IsDomain\">IsDomain</a> <span class=\"fn\">{ <span class=\"fn\">x</span> // <span class=\"fn\"><span class=\"fn\">x</span> <a href=\"./Init/Prelude.html#Membership.mem\">∈</a> <span class=\"fn\"><a href=\"./Mathlib/NumberTheory/NumberField/Basic.html#NumberField.ringOfIntegers\">NumberField.ringOfIntegers</a> (<span class=\"fn\"><a href=\"./Mathlib/NumberTheory/Cyclotomic/Basic.html#CyclotomicField\">CyclotomicField</a> <span class=\"fn\">{ <span class=\"fn\">val</span> := <span class=\"fn\">p</span>, <span class=\"fn\">property</span> := <span class=\"fn\">(_ : <span class=\"fn\"><span class=\"fn\">0</span> <a href=\"./Init/Prelude.html#LT.lt\">&lt</a> <span class=\"fn\">p</span></span>)</span> }</span> <a href=\"./Std/Data/Rat/Basic.html#Rat\">ℚ</a></span>)</span></span> }</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L73-L95","name":"FltRegular.ab_coprime","line":73,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.ab_coprime","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.ab_coprime\"><span class=\"name\">FltRegular</span>.<span class=\"name\">ab_coprime</span></a></span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{p : <a href=\"./Init/Prelude.html#Nat\">ℕ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{a : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{b : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"impl_arg\"><span class=\"decl_args\">\n<span class=\"fn\">{c : <a href=\"./Init/Data/Int/Basic.html#Int\">ℤ</a>}</span></span>\n</span><span class=\"decl_args\">\n<span class=\"fn\">(H : <span class=\"fn\"><span class=\"fn\"><span class=\"fn\"><span class=\"fn\">a</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span> <a href=\"./Init/Prelude.html#HAdd.hAdd\">+</a> <span class=\"fn\"><span class=\"fn\">b</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\"><span class=\"fn\">c</span> <a href=\"./Init/Prelude.html#HPow.hPow\">^</a> <span class=\"fn\">p</span></span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hpzero : <span class=\"fn\"><span class=\"fn\">p</span> <a href=\"./Init/Core.html#Ne\">≠</a> <span class=\"fn\">0</span></span>)</span></span>\n<span class=\"decl_args\">\n<span class=\"fn\">(hgcd : <span class=\"fn\"><span class=\"fn\"><a href=\"./Mathlib/Algebra/GCDMonoid/Finset.html#Finset.gcd\">Finset.gcd</a> <span class=\"fn\">{<span class=\"fn\">a</span>, <span class=\"fn\">b</span>, <span class=\"fn\">c</span>}</span> <span class=\"fn\">id</span></span> <a href=\"./Init/Prelude.html#Eq\">=</a> <span class=\"fn\">1</span></span>)</span></span>\n<span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./Mathlib/RingTheory/Coprime/Basic.html#IsCoprime\">IsCoprime</a> <span class=\"fn\">a</span> <span class=\"fn\">b</span></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L31-L69","name":"FltRegular.CaseI.may_assume","line":31,"kind":"theorem","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.may_assume","doc":""},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">theorem</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.may_assume\"><span class=\"name\">FltRegular</span>.<span class=\"name\">CaseI</span>.<span class=\"name\">may_assume</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><span class=\"fn\"><a href=\"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.SlightlyEasier\">FltRegular.CaseI.SlightlyEasier</a> → <a href=\"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.Statement\">FltRegular.CaseI.Statement</a></span></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L27-L29","name":"FltRegular.CaseI.Statement","line":27,"kind":"def","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.Statement","doc":"Statement of case I. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.Statement\"><span class=\"name\">FltRegular</span>.<span class=\"name\">CaseI</span>.<span class=\"name\">Statement</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"},{"info":{"sourceLink":"https://github.com/CBirkbeck/FltRegulartest/blob/e123e09326ecf51b6559d7bcf4bc6980e57d0de6//FltRegular/CaseI/Statement.lean#L21-L24","name":"FltRegular.CaseI.SlightlyEasier","line":21,"kind":"def","docLink":"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.SlightlyEasier","doc":"Statement of case I with additional assumptions. "},"header":"<div class=\"decl_header\"><span class=\"decl_kind\">def</span>\n<span class=\"decl_name\"><a class=\"break_within\" href=\"./FltRegular/CaseI/Statement.html#FltRegular.CaseI.SlightlyEasier\"><span class=\"name\">FltRegular</span>.<span class=\"name\">CaseI</span>.<span class=\"name\">SlightlyEasier</span></a></span><span class=\"decl_args\"> :</span><div class=\"decl_type\"><a href=\"./foundational_types.html\">Prop</a></div></div>"}]}